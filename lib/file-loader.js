/*!
 * Copyright 2019 Rob Cannon
 * 
 * Permission to use, copy, modify, and/or distribute this software for any purpose with or
 * without fee is hereby granted, provided that the above copyright notice and this
 * permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT
 * SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR
 * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
 * CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OR PERFORMANCE OF THIS SOFTWARE.
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["@robpc/config"]=t():e["@robpc/config"]=t()}(global,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){const n=(e,t)=>{const o=t[e[0]];return void 0===o||1===e.length?o:n(e.slice(1),o)};e.exports=class{constructor(e){this.json=Object.freeze(e||{})}get(e){return n(e.split("."),this.json)}}},function(e,t){const n=process.env.ROBPC_CONFIG_DEBUG,o=n&&"true"===n.toLowerCase();e.exports=class{constructor(e){this.name=e}log(...e){o&&console.log(`[${this.name}]`,...e)}error(...e){console.log(`[${this.name}]`,...e)}}},,function(e,t,n){const o=n(4),r=n(0),c=n(1),{NODE_ENV:i}=process.env,s=new c("config-file-loader"),u=["default"];i&&u.push(i);const f=[],l=u.map(e=>{const t=(e=>`./config/${e}.json`)(e);if(o.existsSync(t))try{const n=o.readFileSync(t),r=JSON.parse(n);return f.push(`${e} -> ${t}`),r}catch(e){return s.error(`Problem reading config file '${t}`,e),null}return null}).filter(e=>e),a={};l.forEach(e=>Object.assign(a,e));const p=a;s.log("Loading config from files:"),f.forEach(e=>s.log(` - ${e}`)),s.log("config:",JSON.stringify(p,null,2)),e.exports=new r(p)},function(e,t){e.exports=require("fs")}])});