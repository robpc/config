/*!
 * Copyright 2019 Rob Cannon
 * 
 * Permission to use, copy, modify, and/or distribute this software for any purpose with or
 * without fee is hereby granted, provided that the above copyright notice and this
 * permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT
 * SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR
 * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
 * CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OR PERFORMANCE OF THIS SOFTWARE.
 */
!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports["@robpc/config"]=n():e["@robpc/config"]=n()}(global,function(){return function(e){var n={};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)o.d(t,r,function(n){return e[n]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=5)}([function(e,n){const o=(e,n)=>{const t=n[e[0]];return void 0===t||1===e.length?t:o(e.slice(1),t)};e.exports=class{constructor(e){this.json=Object.freeze(e||{})}get(e){return o(e.split("."),this.json)}}},function(e,n){const o=process.env.ROBPC_CONFIG_DEBUG,t=o&&"true"===o.toLowerCase();e.exports=class{constructor(e){this.name=e}log(...e){t&&console.log(`[${this.name}]`,...e)}error(...e){console.log(`[${this.name}]`,...e)}}},function(e,n,o){const t=o(0),r=o(1),c=process.env.NODE_CONFIG,i=new r("config-env-loader"),s=(()=>{try{return JSON.parse(c)}catch(e){return i.error(`Problem loading json from NODE_CONFIG: ${c}`),null}})()||{};i.log("config:",JSON.stringify(s,null,2)),e.exports=new t(s)},function(e,n,o){const t=o(4),r=o(0),c=o(1),{NODE_ENV:i}=process.env,s=new c("config-file-loader"),u=["default"];i&&u.push(i);const f=[],l=u.map(e=>{const n=(e=>`./config/${e}.json`)(e);if(t.existsSync(n))try{const o=t.readFileSync(n),r=JSON.parse(o);return f.push(`${e} -> ${n}`),r}catch(e){return s.error(`Problem reading config file '${n}`,e),null}return null}).filter(e=>e),a={};l.forEach(e=>Object.assign(a,e));const p=a;s.log("Loading config from files:"),f.forEach(e=>s.log(` - ${e}`)),s.log("config:",JSON.stringify(p,null,2)),e.exports=new r(p)},function(e,n){e.exports=require("fs")},function(e,n,o){const t=o(2),r=o(3);e.exports={env:t,file:r}}])});